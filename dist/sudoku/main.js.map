{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/input-and-div/input-and-div.component.css","webpack:///./src/app/input-and-div/input-and-div.component.html","webpack:///./src/app/input-and-div/input-and-div.component.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/table/table.component.html","webpack:///./src/app/table/table.component.scss","webpack:///./src/app/table/table.component.ts","webpack:///./src/app/utilities/autofocusDirective.ts","webpack:///./src/app/utilities/onlyNumbers.ts","webpack:///./src/app/utilities/valueLimits.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>proba</h1>\\r\\n  <app-table></app-table>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'sudoku';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { TableComponent } from './table/table.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputAndDivComponent } from './input-and-div/input-and-div.component';\r\nimport { AutofocusDirective } from './utilities/autofocusDirective';\r\nimport { NumberOnlyDirective } from './utilities/onlyNumbers';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TableComponent,\r\n    InputAndDivComponent,\r\n    AutofocusDirective,\r\n    NumberOnlyDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\r\\n  input {\\r\\n    line-height: 2.3em; \\r\\n    width: 2.5em;\\r\\n\\r\\n    color: transparent;\\r\\n    text-shadow: 0 0 0 #2196f3;\\r\\n    text-align: center; \\r\\n  \\r\\n    /* &:focus {\\r\\n        outline: none;\\r\\n    } */\\r\\n}\"","module.exports = \"<input *ngIf=\\\"openedId == elemId\\\"   type=\\\"text\\\"\\r\\n(keyup.enter)=\\\"openedId = null\\\"  [autofocus]=\\\"true\\\" size=\\\"2\\\"\\r\\n[ngModel]=\\\"tableArr[rowIndex][col]\\\"  (keydown)=\\\"onPressedKey($event)\\\" >\\r\\n<div *ngIf=\\\"openedId != elemId\\\"> {{tableArr[rowIndex][col]}}</div> \"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Placeholder } from '@angular/compiler/src/i18n/i18n_ast';\r\n\r\n@Component({\r\n  selector: 'inputAndDiv',\r\n  templateUrl: './input-and-div.component.html',\r\n  styleUrls: ['./input-and-div.component.css']\r\n})\r\nexport class InputAndDivComponent {\r\n\r\n\r\n  @Input() openedId: string = null\r\n  @Input() elemId: string = null\r\n  @Input() rowIndex: number = null\r\n  @Input() col: number = null\r\n  @Input() tableArr: any[][];\r\n\r\n\r\n  @Output() updateOpenedId: EventEmitter<any> = new EventEmitter()\r\n\r\n\r\n\r\n  onPressedKey(e) {\r\n\r\n    if (!Number(e.key)) {\r\n      e.preventDefault()\r\n    }\r\n\r\n    let newValue = Number(e.key)\r\n\r\n    if (newValue === 0) {\r\n      this.tableArr[this.rowIndex][this.col] = \"\"\r\n    }\r\n\r\n    if (newValue) {\r\n      this.tableArr[this.rowIndex][this.col] = Number(newValue)\r\n      e.preventDefault()\r\n    }\r\n\r\n\r\n    let newOpenedId\r\n    if (e.shiftKey && (e.key === \"Tab\")) {\r\n      newOpenedId = this.rowIndex + '_' + (this.col - 1)\r\n      if (this.col == 0) {\r\n        if (this.rowIndex == 0) {\r\n          newOpenedId = this.rowIndex + '_' + 0\r\n        } else {\r\n          newOpenedId = (this.rowIndex - 1) + '_' + 8\r\n        }\r\n      }\r\n\r\n      this.updateOpenedId.emit(newOpenedId)\r\n\r\n    } else if (e.key === \"Tab\") {\r\n      newOpenedId = this.rowIndex + '_' + (this.col + 1)\r\n      if (this.col == 8) {\r\n        if (this.rowIndex == 8) {\r\n          newOpenedId = this.rowIndex + '_' + 8\r\n        } else {\r\n          newOpenedId = (this.rowIndex + 1) + '_' + 0\r\n        }\r\n      }\r\n      this.updateOpenedId.emit(newOpenedId)\r\n\r\n    }\r\n\r\n\r\n    switch (e.key) {\r\n      case \"ArrowUp\": this.rowIndex == 0 ? null : this.updateOpenedId.emit((this.rowIndex - 1) + '_' + this.col); break;\r\n      case \"ArrowDown\": this.rowIndex == 8 ? null : this.updateOpenedId.emit((this.rowIndex + 1) + '_' + this.col); break;\r\n      case \"ArrowLeft\": this.col == 0 ? null : this.updateOpenedId.emit(this.rowIndex + '_' + (this.col - 1)); break;\r\n      case \"ArrowRight\": this.col == 8 ? null : this.updateOpenedId.emit(this.rowIndex + '_' + (this.col + 1)); break;\r\n\r\n      default: null\r\n        break;\r\n    }\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  apiURL: string = 'https://cors-anywhere.herokuapp.com/http://www.cs.utep.edu/cheon/ws/sudoku/new/?size=9';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getSudoku(level?){\r\n    if (!level) {\r\n      level = 1\r\n    }\r\n    return this.httpClient.get(`${this.apiURL}/?level=${level}`);\r\n}\r\n}\r\n","module.exports = \"<h2>Hello from Baar</h2>\\r\\n\\r\\n<h1>TABLE</h1>\\r\\n<!-- tableArr: {{tableArr | json}}\\r\\n  <br>  ------------ <br> -->\\r\\n  <!-- solvedArr: {{solvedArr | json}} -->\\r\\n\\r\\n<table id=\\\"customers\\\" [ngClass]=\\\"{'normalState': !hasError && !showSuccess, 'alert alert-danger': hasError, 'alert alert-success': showSuccess}\\\">\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let row of emptyNineCellsArr, let rowIndex = index\\\">\\r\\n      <ng-container *ngFor=\\\"let el of emptyNineCellsArr , let col =  index\\\">\\r\\n        <td id=\\\"{{rowIndex + '_' + col}}\\\" attr.data-el=\\\"{{el}}\\\" (click)=\\\"showInput(rowIndex + '_' + col)\\\" >\\r\\n          <inputAndDiv elemId=\\\"{{rowIndex + '_' + col}}\\\" [tableArr]=\\\"tableArr\\\" [rowIndex]=\\\"rowIndex\\\" [col]=\\\"col\\\"\\r\\n            [(openedId)]=\\\"openedId\\\" (updateOpenedId)=\\\"showInput($event)\\\"></inputAndDiv>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"checkUserSolution()\\\">check my solution</button>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"showSolvedSudoku()\\\">solve it for me please</button>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"fillUpInitialTable()\\\">clear table</button>\\r\\n<br>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"loadPreparedData(1)\\\">load level 1</button>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"loadPreparedData(2)\\\">load level 2\\r\\n</button>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"loadPreparedData(3)\\\">load level 3</button>\\r\\n<br>\\r\\n<ng-container *ngIf=\\\"isLoading\\\">\\r\\n  <div class=\\\"spinner-grow text-success\\\" role=\\\"status\\\"></div>\\r\\n  <div class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\"></div>\\r\\n  <div class=\\\"spinner-grow text-warning\\\" role=\\\"status\\\"></div>\\r\\n</ng-container>\"","module.exports = \"#customers {\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n  margin: auto;\\n  border-bottom: 3px solid #080808;\\n  border-right: 3px solid #080808;\\n  border-top: 3px solid #080808;\\n  border-left: 3px solid #080808; }\\n\\ntd, th {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  width: 60px;\\n  height: 60px; }\\n\\ntr td:nth-child(3n) {\\n  border-right: 3px solid #080808; }\\n\\ntr:nth-child(3n) td {\\n  border-bottom: 3px solid #080808; }\\n\\n.normalState tr:nth-child(n+4):nth-child(-n+6) {\\n  background-color: #ebebeb; }\\n\\n.normalState td:nth-child(n+4):nth-child(-n+6) {\\n  background-color: #ebebeb; }\\n\\n.normalState tr:nth-child(n+4):nth-child(-n+6) td:nth-child(n+4):nth-child(-n+6) {\\n  background-color: white; }\\n\\ntd:hover {\\n  background-color: #8ac1db !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ApiService } from '../services/api.service';\r\nimport { ValueLimits } from '../utilities/valueLimits';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss']\r\n})\r\nexport class TableComponent implements OnInit {\r\n\r\n  constructor(private toastr: ToastrService, private apiService: ApiService) { }\r\n\r\n\r\n  public isLoading: boolean = false;\r\n  public tableArr: any[][] = [];\r\n  public solvedArr: any[][] = [];\r\n  public emptyNineCellsArr: number[] = new Array(9)\r\n  public emptyElement: string = '';\r\n  public calledTimes: number = 0\r\n  public hasError: boolean = false;\r\n  public showSuccess: boolean = false;\r\n  public hasGotPreparedGame: boolean = false;\r\n  public isSolved: boolean = false;\r\n  public openedId: string = null\r\n  public isUserCheck: boolean = false;\r\n\r\n\r\n  ngOnInit() {\r\n    this.fillUpInitialTable()\r\n    // this.loadPreparedData(1);\r\n    // this.check()\r\n  }\r\n\r\n\r\n\r\n  \r\n  fillUpInitialTable() {\r\n    this.calledTimes = 0;\r\n    this.hasError = false;\r\n    this.showSuccess = false;\r\n    this.isSolved = false;\r\n    this.tableArr = [];\r\n    for (let i = 0; i < 9; i++) {\r\n      let currentarrArr = []\r\n      for (let y = 0; y < 9; y++) {\r\n        currentarrArr.push('')\r\n      }\r\n      this.tableArr.push(currentarrArr);\r\n    }\r\n\r\n    this.solvedArr = this.tableArr.map((currentArr) => {\r\n      return currentArr.slice(0);\r\n    })\r\n\r\n  }\r\n\r\n\r\n  checkUserSolution() {\r\n\r\n    if (!this.hasGotPreparedGame && !this.isSolved){\r\n      this.solvedArr = this.tableArr.map((currentArr) => {\r\n        return currentArr.slice(0);\r\n      })\r\n      this.isUserCheck = true;\r\n      this.solveSudoku(this.solvedArr);\r\n    }\r\n\r\n\r\n    for (let row = 0; row < this.tableArr.length; row++) {\r\n      for (let col = 0; col < this.tableArr.length; col++) {\r\n        if (this.tableArr[row][col]) {\r\n          if (Number(this.tableArr[row][col]) !== Number(this.solvedArr[row][col])) {\r\n            this.hasError = true\r\n            this.toastr.error(\"We are sorry to say... your solution has errors !\")\r\n            setTimeout(() => {\r\n              this.hasError = false\r\n            }, 5000);\r\n            return\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.showSuccess = true;\r\n    this.toastr.success(\"your solution has no errors\")\r\n    setTimeout(() => {\r\n      this.showSuccess = false\r\n    }, 2000);\r\n    return\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  public loadPreparedData(level): void {\r\n    this.hasGotPreparedGame = true;\r\n    this.isLoading = true;\r\n    this.fillUpInitialTable();\r\n    this.apiService.getSudoku(level).subscribe(res => {\r\n      let currentX = 0\r\n      res[\"squares\"].map((data) => {\r\n        let { x, y, value } = data\r\n        if (currentX == x) {\r\n          this.tableArr[x][y] = value\r\n        } else {\r\n          currentX = x\r\n          this.tableArr[x][y] = value\r\n        }\r\n      })\r\n      this.solvedArr = this.tableArr.map((currentArr) => {\r\n        return currentArr.slice(0);\r\n      });\r\n      this.isLoading = false;\r\n      this.solveSudoku(this.solvedArr);\r\n    })\r\n\r\n  }\r\n\r\n\r\n  showSolvedSudoku() {\r\n\r\n    if (this.hasGotPreparedGame && this.isSolved) {\r\n      this.tableArr = this.solvedArr.map((currentArr) => {\r\n        return currentArr.slice(0);\r\n      })\r\n      this.toastr.success(\"We solved your Sudoku successfully !\", \"Success\")\r\n\r\n    } else {\r\n      this.solveSudoku(this.tableArr);\r\n      if (this.isSolved) {\r\n        this.showSuccess = true;\r\n        this.toastr.success(\"We successfully solved your Sudoku !\", \"Success\")\r\n      }\r\n      setTimeout(() => {\r\n        this.showSuccess = false\r\n      }, 2000);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  public showInput(newOpenedId): void {\r\n    this.openedId = newOpenedId;\r\n  }\r\n\r\n\r\n\r\n  //////////////////////////////////////////////////////////////////\r\n  ////////////////////////////////////////////////////////////\r\n\r\n\r\n  /*\r\n    Authorship: ALL credit for the code in this file goes to the authors of the\r\n    book \"Elements of Programming Interviews\" by Adnan Aziz, Amit Prakash, and\r\n    Tsung-Hsien Lee.\r\n    \r\n    I have just adapted the solution to pass on Leetcode, added explanatory\r\n    comments, reformatted the code, & changed variable names for understanding.\r\n    Sudoku Solver - LeetCode: https://leetcode.com/problems/sudoku-solver/\r\n    This code passes all Leetcode test cases as of Jan. 8 2019 (12:18 am)\r\n    Runtime: 11 ms*, faster than 73.28% of Java online submissions for Sudoku Solver.\r\n    * Funny Note: Took me 30 minutes of unchecked code editing (no IDE) to get the code\r\n    in working order before I first ran it. IT WORKED FIRST RUN IN LEETCODE. No syntax\r\n    errors, no out of bounds exceptions. That is so impossible, but I'll take it.\r\n    The video to explain this code is here: https://www.youtube.com/watch?v=JzONv5kaPJM\r\n  */\r\n\r\n\r\n  /*\r\n    Driver function to kick off the recursion\r\n  */\r\n  public solveSudoku(table): void {\r\n    return this.solveSudokuCell(0, 0, table);\r\n  }\r\n\r\n  /*\r\n    This function chooses a placement for the cell at (row, col)\r\n    and continues solving based on the rules we define.\r\n    \r\n    Our strategy:\r\n    We will start at row 0.\r\n    We will solve every column in that row.\r\n    When we reach the last column we move to the next row.\r\n    If this is past the last row (row == board.length) we are done.\r\n    The whole board has been solved.\r\n  */\r\n\r\n\r\n  public solveSudokuCell(row, col, table) {\r\n    \r\n    this.isLoading = true\r\n    ++this.calledTimes\r\n\r\n    if (this.calledTimes >= ValueLimits.maxTrials) {\r\n      this.hasError = true;\r\n      this.isLoading = false;\r\n      this.toastr.error(\"We coudn't solve your Sudoku. Please check again your initial numbers input !\")\r\n      setTimeout(() => {\r\n        this.hasError = false\r\n      }, 5000);\r\n      return true;\r\n    }\r\n\r\n    /*\r\n      Have we finished placements in all columns for\r\n      the row we are working on?\r\n    */\r\n\r\n    if (col == table[row].length) {\r\n\r\n      /*\r\n        Yes. Reset to col 0 and advance the row by 1.\r\n        We will work on the next row.\r\n      */\r\n      col = 0;\r\n      row++;\r\n\r\n      /*\r\n        Have we completed placements in all rows? If so then we are done.\r\n        If not, drop through to the logic below and keep solving things.\r\n      */\r\n      if (row == table.length) {\r\n        // if (!this.hasGotPreparedGame) {\r\n        // }\r\n        this.isSolved = true\r\n        this.isLoading = false;\r\n        return true; // Entire board has been filled without conflict.\r\n      }\r\n\r\n    }\r\n\r\n    // Skip non-empty entries. They already have a value in them.\r\n    if (table[row][col] != this.emptyElement) {\r\n      return this.solveSudokuCell(row, col + 1, table);\r\n    }\r\n\r\n    /*\r\n      Try all values 1 through 9 in the cell at (row, col).\r\n      Recurse on the placement if it doesn't break the constraints of Sudoku.\r\n    */\r\n    for (let value = 1; value <= table.length; value++) {\r\n\r\n      let charToPlace = value; // convert int value to char\r\n\r\n      /*\r\n        Apply constraints. We will only add the value to the cell if\r\n        adding it won't cause us to break sudoku rules.\r\n      */\r\n      if (this.canPlaceValue(table, row, col, charToPlace)) {\r\n        table[row][col] = charToPlace;\r\n        if (this.solveSudokuCell(row, col + 1, table)) { // recurse with our VALID placement\r\n          return true;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    /*\r\n      Undo assignment to this cell. No values worked in it meaning that\r\n      previous states put us in a position we cannot solve from. Hence,\r\n      we backtrack by returning \"false\" to our caller.\r\n    */\r\n    table[row][col] = this.emptyElement;\r\n    return false; // No valid placement was found, this path is faulty, return false\r\n  }\r\n\r\n  /*\r\n    Will the placement at (row, col) break the Sudoku properties?\r\n  */\r\n  public canPlaceValue(board, row, col, charToPlace) {\r\n\r\n    // Check column constraint. For each row, we do a check on column \"col\".\r\n    for (let i = 0; i < board.length; i++) {\r\n      if (charToPlace == board[i][col]) {\r\n        return false;\r\n      }\r\n\r\n    }\r\n\r\n    // Check row constraint. For each column in row \"row\", we do a check.\r\n    for (let i = 0; i < board.length; i++) {\r\n      if (charToPlace == board[row][i]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    /*\r\n      Check region constraints.\r\n      \r\n      In a 9 x 9 board, we will have 9 sub-boxes (3 rows of 3 sub-boxes).\r\n      \r\n      The \"I\" tells us that we are in the Ith sub-box row. (there are 3 sub-box rows)\r\n      The \"J\" tells us that we are in the Jth sub-box column. (there are 3 sub-box columns)\r\n      \r\n      Integer properties will truncate the decimal place so we just know the sub-box number we are in.\r\n      Each coordinate we touch will be found by an offset from topLeftOfSubBoxRow and topLeftOfSubBoxCol.\r\n    */\r\n\r\n    let regionSize = Number(Math.sqrt(board.length)); // gives us the size of a sub-box\r\n\r\n\r\n    let I = Math.floor(row / regionSize);\r\n    let J = Math.floor(col / regionSize);\r\n\r\n    /*\r\n      This multiplication takes us to the EXACT top left of the sub-box. We keep the (row, col)\r\n      of these values because it is important. It lets us traverse the sub-box with our double for loop.\r\n    */\r\n    let topLeftOfSubBoxRow = regionSize * I; // the row of the top left of the block\r\n    let topLeftOfSubBoxCol = regionSize * J; // the column of the tol left of the block\r\n\r\n    // console.log('topLeftOfSubBoxRow', topLeftOfSubBoxRow);\r\n\r\n    for (let i = 0; i < regionSize; i++) {\r\n      for (let j = 0; j < regionSize; j++) {\r\n\r\n        /*\r\n          i and j just define our offsets from topLeftOfBlockRow\r\n          and topLeftOfBlockCol respectively\r\n        */\r\n        //  console.log('stop', board[topLeftOfSubBoxRow + i]);\r\n        if (!board[topLeftOfSubBoxRow + i]) {\r\n          debugger\r\n        }\r\n        if (charToPlace == board[topLeftOfSubBoxRow + i][topLeftOfSubBoxCol + j]) {\r\n          return false;\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return true; // placement is valid\r\n  }\r\n\r\n\r\n}\r\n","import { Directive, ElementRef, Input } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[autofocus]\"\r\n})\r\nexport class AutofocusDirective\r\n{\r\n    private focus = true;\r\n\r\n    constructor(private el: ElementRef)\r\n    {\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n        if (this.focus)\r\n        {\r\n            //Otherwise Angular throws error: Expression has changed after it was checked.\r\n            window.setTimeout(() =>\r\n            {\r\n                this.el.nativeElement.focus(); //For SSR (server side rendering) this is not safe. Use: https://github.com/angular/angular/issues/15008#issuecomment-285141070)\r\n            });\r\n        }\r\n    }\r\n\r\n    @Input() set autofocus(condition: boolean)\r\n    {\r\n        this.focus = condition !== false;\r\n    }\r\n}","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n selector: '[myNumberOnly]'\r\n})\r\nexport class NumberOnlyDirective {\r\n // Allow decimal numbers and negative values\r\n private regex: RegExp = new RegExp(/^[\\d]$/g);\r\n // Allow key codes for special events. Reflect :\r\n // Backspace, tab, end, home\r\n private specialKeys: Array<string> = [ 'Backspace', 'Tab', 'End', 'Home', '-' ];\r\n\r\nconstructor(private el: ElementRef) {\r\n }\r\n @HostListener('keydown', [ '$event' ])\r\n onKeyDown(event: KeyboardEvent) {\r\n // Allow Backspace, tab, end, and home keys\r\n if (this.specialKeys.indexOf(event.key) !== -1) {\r\n return;\r\n }\r\n let current: string = this.el.nativeElement.value;\r\n let next: string = current.concat(event.key);\r\n if (next && !String(next).match(this.regex)) {\r\n event.preventDefault();\r\n }\r\n }\r\n}","export enum ValueLimits {\r\n    maxTrials = 1000,\r\n    maxFilledPositions = 81\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}